version: '3.8'

services:
  fpga-loader:
    image: fpga-loader-image
    container_name: fpga-loader-container
    command: python3 ./fpga-loader.py
    build:
      context: ./fpga-loader
      dockerfile: dockerfile
    tty: true
    ports:
      - "${FPGA_LOADER:-8000}:8000"
    environment:
      - MANAGE_USB_POWER=${MANAGE_USB_POWER}
      - RUPCON_HOST=${RUPCON_HOST}
      - DEVICE_MANAGER_HOST=${DEVICE_MANAGER_HOST}
    privileged: true
    volumes:
      - ./fpga-loader:/home/fpga-loader
      - /dev/:/dev/
    networks:
      - fpga-loader-network
  
  RUPCon:
    image: rupcon-image
    container_name: rupcon-container
    command: python3 ./RUPCon.py
    build:
      context: ./remoteUSBPowerControl
      dockerfile: dockerfile
    tty: true
    ports:
      - "${RUPCON_PORT:-8001}:8000"
    environment:
      - ID_VENDOR_ARDUINO=${ID_VENDOR_ARDUINO}
      - ID_PRODUCT_ARDUINO=${ID_PRODUCT_ARDUINO}
    privileged: true
    volumes:
      - ./remoteUSBPowerControl:/home/remoteUSBPowerControl
    networks:
      - fpga-loader-network
    devices:
      - /dev/:/dev/

  ReTiCap:
    image: reticap-image
    container_name: reticap-container
    command: python3 ./reticap.py
    build:
      context: ./realTimeVideoCapture
      dockerfile: dockerfile
    tty: true
    ports:
      - "${RETICAP_PORT:-5000}:5000"
    privileged: true
    volumes:
      - ./realTimeVideoCapture:/home/realTimeVideoCapture
      - /dev/:/dev/
    networks:
      - fpga-loader-network

  device-manager:
    image: device-manager-image
    container_name: device-manager
    build:
      context: ./devicemanager
      target: development
    volumes:
      - static_volume:/home/device-manager/web/staticfiles
      - ./devicemanager:/home/device-manager/web/
    env_file:
      - .env
    ports:
      - "${DEVICE_MANAGER_PORT:-8002}:8000"
    depends_on:
      - db-device-manager
    networks:
      - fpga-loader-network

  db-device-manager:
    image: postgres
    container_name: db-device-manager
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - fpga-loader-network

  pg-admin-device-manager:
    image: dpage/pgadmin4
    container_name: pg-admin-device-manager
    ports:
      - "${PG_ADMIN_PORT:-8003}:80"
    env_file:
      - .env
    networks:
      - fpga-loader-network
    volumes:
      - pgadmin-data:/var/lib/pgadmin

networks:
  fpga-loader-network:

volumes:
  postgres_data:
  pgadmin-data:
  static_volume: